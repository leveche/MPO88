#+TITLE: Moscow Programming olympiads (Московские Олимпиады по Программированию

* 1980
** 80.1.2 Перестановки
Задан массив A[1:m] попарно различных цисел. Напечатать все
перестановки этих чисел.
*** Решение
- Для m=2: вернём P(A):=[ [A[0],A[1]], [A[1],A[0]] ]
- m=3: P(A) = [ A[i],P(A\A[i]) ] for i=1,2,3
- пронумеруем все m! перестановок:
  - 1: 1 2
  - 2: 2 1

  - 1: 1 2 3
  - 2: 1 3 2
  - 3: 2 1 3
  - 4: 2 3 1
  - 5: 3 1 2
  - 6: 3 2 1
* 1984
** 84.6 Календарь
Заданы три числа A, B, C, которые обозначают число, месяц и год. Найти
номер дня с начала года.
*** Решение
#+BEGIN_SRC python :results none
  def isleap(yr):
      return 1 if ( yr%400 == 0 or (yr%100 != 0 and yr%4 == 0)) else 0

  assert isleap(2000) == 1 and isleap(2007) == 0 and isleap(2008) == 1 and isleap(2001) == 0

  def n_yr(a,b,c):
      """returs day number in year a, of date c in month b"""

      days_in_month = [3,0,3,2,3,2,3,3,2,3,2,3]
      leap = isleap(a)

      assert 0 != a and 0 < b and b <= 12 and 0 < c and c <= 28 + days_in_month[b-1] + leap

      days = 0
      for month in range(b-1):
          addleap = leap if month + 1 == 2 else 0
          days += 28 + days_in_month[month] + addleap
      return days + c

  assert n_yr(2000,1,1) == 1
  assert n_yr(2001,1,1) == 1
  assert n_yr(2000,2,1) == 32
  assert n_yr(2001,2,1) == 32
  assert n_yr(2000,2,29) == 31+29
  assert n_yr(2000,2,14) == 31+14
  assert n_yr(2000,3,4)  == 31+29+4
  assert n_yr(2008,11,18) == 31+29+31+30+31+30+31+31+30+31+18
#+END_SRC

#+RESULTS:
